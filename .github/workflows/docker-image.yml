name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/discordsearchscraper

jobs:

  build:
  
    runs-on: ubuntu-latest

    permissions:
      actions: write
      contents: read
      
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            tag: amd64
          - platform: linux/arm64
            tag: arm64
          
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build image (amd64)
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile
          pull: false
          push: false
          load: true
          tags: ${{ env.REGISTRY_IMAGE }}:${{ matrix.tag }}
          platforms: ${{ matrix.platform }}
      -
        name: docker-slim (amd64)
        uses: kitabisa/docker-slim-action@v1.1.1
        env:
          DSLIM_HTTP_PROBE: false
          DSLIM_PULL: false
          DSLIM_IMAGE_BUILD_ARCH: ${{ matrix.tag }}
        with:
          target: ${{ env.REGISTRY_IMAGE }}:${{ matrix.tag }}
          overwrite: true
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Push images to Docker Hub
        run: |
          docker push ${{ env.REGISTRY_IMAGE }}:${{ matrix.tag }}
  manifest:
        runs-on: ubuntu-latest
        needs: build
        steps:
          -
            name: Checkout
            uses: actions/checkout@v4
          -   
            name: Login to DockerHub Registry
            run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          -
            name: Create and push manifest list
            run: |
              docker manifest create --amend ${{ env.REGISTRY_IMAGE }}:latest \
                ${{ env.REGISTRY_IMAGE }}:amd64 \
                ${{ env.REGISTRY_IMAGE }}:arm64
              docker manifest push ${{ env.REGISTRY_IMAGE }}:latest
          - 
            name: Cleanup tags
            run: |
              ACCESS_TOKEN=$(curl -X POST \
                -H "Content-Type: application/json" \
                -H "Accept: application/json" \
                -d "{\"username\":\"${{ secrets.DOCKERHUB_USERNAME }}\",\"password\":\"${{ secrets.DOCKERHUB_TOKEN }}\"}" \
                https://hub.docker.com/v2/users/login/ | jq --raw-output '.token')
                        
              PLATFORMS=("amd64" "arm64")
              for PLATFORM in ${PLATFORMS[@]}; do
                echo "Deleting tag: discordsearchscraper:${PLATFORM}"
                #curl -s -L -X DELETE "https://hub.docker.com/v2/namespaces/aamdigital/repositories/ndb-server/tags/%TAG" -H "Authorization: Bearer $token"
                
                curl -X DELETE \
                  -H "Accept: application/json" \
                  -H "Authorization: JWT ${ACCESS_TOKEN}" \
                  https://hub.docker.com/v2/namespaces/${{ secrets.DOCKERHUB_USERNAME }}/repositories/discordsearchscraper/tags/${PLATFORM}
              done
