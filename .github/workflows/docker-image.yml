name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/discordsearchscraper

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64

    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          push: false
          load: true
          tags: discordsearchscraper:${{ matrix.platform }}
      -
        name: docker-slim
        uses: kitabisa/docker-slim-action@v1.1.1
        env:
          DSLIM_HTTP_PROBE: false
          DSLIM_PULL: false
          DSLIM_IMAGE_BUILD_ARCH: ${{ matrix.platform }}
        with:
          target: discordsearchscraper:${{ matrix.platform }}
          overwrite: true
      -
        name: Tag image
        run: |
          docker tag discordsearchscraper:${{ matrix.platform }} ${{ env.REGISTRY_IMAGE }}:${{ matrix.platform }}
      -
        name: Push image
        run: |
          docker push ${{ env.REGISTRY_IMAGE }}:${{ matrix.platform }}

  merge:
    runs-on: ubuntu-latest
    needs: build

    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create and push manifest list
        run: |
          docker buildx imagetools create ${{ env.REGISTRY_IMAGE }}:latest \
            ${{ env.REGISTRY_IMAGE }}:linux/amd64 \
            ${{ env.REGISTRY_IMAGE }}:linux/arm64
      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:latest
